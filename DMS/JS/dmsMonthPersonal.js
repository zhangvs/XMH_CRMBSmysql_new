var subtext = ''; var axisDatas = new Array(); var nodeColors = ['#ffb6c1', '#20b2aa', '#ffa07a', '#87cefa']; var baseColor = '#00ff00'; var planColor = '#ff1493'; var ratColor = '#ff3300'; var admin_user_name; var name; var group_nodes = new Array(); var group_quarters = [3, 6, 9, 12]; var daycount = 0; var node_one; var node_two; var node_three; var node_four; var date_base = 0; var node_base = 0; var month_base = 0; var date_plan = 0; var node_plan = 0; var month_plan = 0; var date_rat = 0; var node_rat = 0; var month_rat = 0; var date_lines = new Array(); var node_lines = new Array(); var node_Point = new Array(); var month_lines = new Array(); var saleData = new Array(); var backData = new Array(); var saleBackData = new Array(); var dayWcl = new Array(); var dayCha = new Array(); var saleDataSum = 0; var backDataSum = 0; var saleBackDataSum = 0; var nodeDataColor = new Array(); var nodeData = new Array(); var nodeChaData = new Array(); var nodeWclData = new Array(); var monthDatas = new Array(); var monthChaDatas = new Array(); var monthWcls = new Array(); function clearData() { getDateCount(); date_base = 0; node_base = 0; month_base = 0; date_plan = 0; node_plan = 0; month_plan = 0; date_rat = 0; node_rat = 0; month_rat = 0; date_lines = []; node_lines = []; month_lines = []; saleData = []; backData = []; saleBackData = []; dayCha = []; dayWc = []; saleBackDataSum = 0; saleDataSum = 0; backDataSum = 0; nodeData = []; nodeChaData = []; nodeWclData = []; monthDatas = []; monthChaDatas = []; monthWcls = [] } function getMonthSaleBackData(GridData) { for (var j = 0; j < GridData.Rows.length; j++) { if (j == 0) { admin_user_name = GridData.Rows[j].admin_user_name; name = GridData.Rows[j].name; for (var i = 0; i < daycount; i++) { saleData[i] = 0; backData[i] = 0; saleBackData[i] = 0 } month_base = parseFloat(parseFloat(GridData.Rows[j].month_base).toFixed()); node_base = parseFloat((month_base / 4).toFixed()); date_base = parseFloat((month_base / daycount).toFixed()); getLines('日基线', date_base, baseColor, axisDatas[length - 1], date_lines); getLines('节点基线', node_base, baseColor, axisDatas[length - 1], node_lines); getLines('月基线', month_base, baseColor, axisDatas[length - 1], month_lines); month_plan = parseFloat(parseFloat(GridData.Rows[j].month_plan).toFixed()); node_plan = parseFloat((month_plan / 4).toFixed()); date_plan = parseFloat((month_plan / daycount).toFixed()); getLines('日计划线', date_plan, planColor, axisDatas[length - 1], date_lines); getLines('节点计划线', node_plan, planColor, axisDatas[length - 1], node_lines); getLines('月计划线', month_plan, planColor, axisDatas[length - 1], month_lines); month_rat = parseFloat(parseFloat(GridData.Rows[j].month_rat).toFixed()); node_rat = parseFloat((month_rat / 4).toFixed()); date_rat = parseFloat((month_rat / daycount).toFixed()); getLines('日评比线', date_rat, ratColor, axisDatas[length - 1], date_lines); getLines('节点评比线', node_rat, ratColor, axisDatas[length - 1], node_lines); getLines('月评比线', month_rat, ratColor, axisDatas[length - 1], month_lines) } var orderDate = parseInt(GridData.Rows[j].orderdate) - 1; saleBackData[orderDate] = parseFloat(GridData.Rows[j].realmoney.toFixed()); saleBackDataSum += parseFloat(GridData.Rows[j].realmoney.toFixed()); saleData[orderDate] = parseFloat(GridData.Rows[j].salemoney.toFixed()); saleDataSum += parseFloat(GridData.Rows[j].salemoney.toFixed()); backData[orderDate] = parseFloat(GridData.Rows[j].backmoney.toFixed()); backDataSum += parseFloat(GridData.Rows[j].backmoney.toFixed()) } } function initNodeData() { var nodeSum1 = 0; var nodeSum2 = 0; var nodeSum3 = 0; var nodeSum4 = 0; for (var j = 0; j < node_one; j++) { nodeSum1 += parseFloat(saleBackData[j].toFixed()); nodeDataColor[j] = new Array(); nodeDataColor[j][0] = nodeSum1; nodeDataColor[j][1] = nodeColors[0] } for (var j = node_one; j < node_two; j++) { nodeSum2 += parseFloat(saleBackData[j].toFixed()); nodeDataColor[j] = new Array(); nodeDataColor[j][0] = nodeSum2; nodeDataColor[j][1] = nodeColors[1] } for (var j = node_two; j < node_three; j++) { nodeSum3 += parseFloat(saleBackData[j].toFixed()); nodeDataColor[j] = new Array(); nodeDataColor[j][0] = nodeSum3; nodeDataColor[j][1] = nodeColors[2] } for (var j = node_three; j < node_four; j++) { nodeSum4 += parseFloat(saleBackData[j].toFixed()); nodeDataColor[j] = new Array(); nodeDataColor[j][0] = nodeSum4; nodeDataColor[j][1] = nodeColors[3] } showMonthNodeData() } function showMonthNodeData() { for (var j = 0; j < daycount; j++) { getColorAndValue(nodeData, nodeDataColor[j][0], nodeDataColor[j][1]); getColorAndValue(nodeChaData, nodeDataColor[j][0] - node_plan, nodeDataColor[j][1]); getColorAndValue(nodeWclData, parseFloat((nodeDataColor[j][0] / node_plan * 100).toFixed()), nodeDataColor[j][1]) } node_Point = []; if (nodeChaData[node_one - 1].value > 0) { getPoint(node_Point, '1节点奖', node_one - 1, nodeDataColor[node_one - 1][0]) } if (nodeChaData[node_two - 1].value > 0) { getPoint(node_Point, '2节点奖', node_two - 1, nodeDataColor[node_two - 1][0]) } if (nodeChaData[node_three - 1].value > 0) { getPoint(node_Point, '3节点奖', node_three - 1, nodeDataColor[node_three - 1][0]) } if (nodeChaData[node_four - 1].value > 0) { getPoint(node_Point, '4节点奖', node_four - 1, nodeDataColor[node_four - 1][0]) } } function initMonthData() { var monthSum = 0; for (var j = 0; j < daycount; j++) { monthSum += parseFloat(saleBackData[j].toFixed()); monthDatas[j] = monthSum; monthChaDatas[j] = parseFloat((monthDatas[j] - month_plan).toFixed()); monthWcls[j] = parseFloat((monthDatas[j] / month_plan * 100).toFixed()); dayCha[j] = parseFloat((saleBackData[j] - date_plan).toFixed()); dayWcl[j] = parseFloat((saleBackData[j] / date_plan * 100).toFixed()) } } function getSubText() { if (date_lines.length > 0 && node_lines.length > 0 && month_lines.length > 0) { subtext = '日基数：' + date_lines[0].value + '\n日计划：' + date_lines[2].value + '\n日评比：' + date_lines[4].value + '\n\n节点基数：' + node_lines[0].value + '\n节点计划：' + node_lines[2].value + '\n节点评比：' + node_lines[4].value + '\n\n月基数：' + month_lines[0].value + '\n月计划：' + month_lines[2].value + '\n月评比：' + month_lines[4].value + '\n\n月销量：' + saleDataSum + '\n月退货：' + backDataSum + '\n月实际：' + saleBackDataSum + '\n月完成率：' + parseFloat((saleBackDataSum / month_lines[2].value * 100).toFixed()) + '%' } else { subtext = '\n\n月销量：' + saleDataSum + '\n月退货：' + backDataSum + '\n月实际：' + saleBackDataSum } } function DrawEChart() { $("#main").css("height", 680); var option = { title: { text: admin_user_name + '_' + name + '_' + smonth + '月份销售月报', subtext: subtext }, grid: { x: 180, }, tooltip: { trigger: 'axis', showDelay: 0, }, legend: { data: ['日销售额', '日退货额', '日实际销售额', '日差额', '日完成率', '节点销售额', '节点差额', '节点完成率', '月销售额', '月差额', '月完成率'], selected: { '日销售额': false, '日退货额': false, '日实际销售额': false, '日差额': false, '日完成率': false, '节点销售额': true, '节点差额': false, '节点完成率': false, '月销售额': false, '月差额': false, '月完成率': false } }, toolbox: { show: true, orient: 'vertical', feature: { mark: { show: true }, dataView: { show: true, readOnly: false, optionToContent: function (opt) { var series = opt.series; var table = '<table class="dataView" style="width:100%;text-align:center;border:1px solid"><tbody><tr>' + '<td>日期</td>'; for (var i = 0, l = series.length; i < l; i++) { table += '<td>' + series[i].name + '</td>' }; table += '</tr>'; for (var m = 0, g = axisDatas.length; m < g; m++) { table += '<tr><td>' + axisDatas[m].value + '</td>'; for (var n = 0, l = series.length; n < l; n++) { var val = 0; if (n == 5 || n == 6 || n == 7) { val = series[n].data[m].value } else { val = series[n].data[m] } if (n == 4 || n == 7 || n == 10) val += '%'; table += '<td>' + val + '</td>' } table += '</tr>' }; table += '</tbody></table>'; return table }, }, magicType: { show: true, type: ['line', 'bar'] }, restore: { show: true }, saveAsImage: { show: true } } }, calculable: true, xAxis: [{ type: 'category', axisLabel: { formatter: function (v) { return v + '日' } }, data: axisDatas }], yAxis: [{ type: 'value', scale: true, axisLabel: { formatter: function (v) { return v } }, splitArea: { show: true } }], series: [{ name: '日销售额', stack: '日期', type: 'bar', itemStyle: { normal: { label: { show: true, position: 'top' } } }, data: saleData }, { name: '日退货额', stack: '日期', type: 'bar', itemStyle: { normal: { label: { show: true, position: 'bottom' } } }, data: backData }, { name: '日实际销售额', stack: '日期', type: 'bar', itemStyle: { normal: { label: { show: true, position: 'top' } } }, data: saleBackData, markLine: { data: date_lines } }, { name: '日差额', stack: '日期', type: 'bar', itemStyle: { normal: { label: { show: true, position: 'bottom' } } }, data: dayCha }, { name: '日完成率', stack: '日期', type: 'bar', itemStyle: { normal: { label: { show: true, position: 'top', formatter: function (params, ticket, callback) { return params.data + '%' }, } } }, data: dayWcl }, { name: '节点销售额', stack: '节点', type: 'bar', itemStyle: { normal: { label: { show: true, position: 'top' } } }, data: nodeData, markLine: { data: node_lines }, markPoint: { data: node_Point } }, { name: '节点差额', stack: '节点', type: 'bar', itemStyle: { normal: { label: { show: true, position: 'bottom' } } }, data: nodeChaData }, { name: '节点完成率', stack: '节点', type: 'bar', itemStyle: { normal: { label: { show: true, position: 'top', formatter: function (params, ticket, callback) { return params.data.value + '%' }, } } }, data: nodeWclData }, { name: '月销售额', stack: '月份', type: 'bar', itemStyle: { normal: { label: { show: true, position: 'top' } } }, data: monthDatas, markLine: { data: month_lines } }, { name: '月差额', stack: '月份', type: 'bar', itemStyle: { normal: { label: { show: true, position: 'bottom' } } }, data: monthChaDatas }, { name: '月完成率', stack: '月份', type: 'bar', itemStyle: { normal: { label: { show: true, position: 'top', formatter: function (params, ticket, callback) { return params.data + '%' }, } } }, data: monthWcls }] }; var myChart = echarts.init(document.getElementById('main'), 'macarons'); myChart.setOption(option); window.onresize = myChart.resize }