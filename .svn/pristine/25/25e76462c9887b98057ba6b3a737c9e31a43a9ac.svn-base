/**  版本信息模板在安装目录下，可自行修改。
* shop_order_goods.cs
*
* 功 能： N/A
* 类 名： shop_order_goods
*
* Ver    变更日期             负责人  变更内容
* ───────────────────────────────────
* V0.01  2016/8/18 15:14:08   N/A    初版
*
* Copyright (c) 2012 Maticsoft Corporation. All rights reserved.
*┌──────────────────────────────────┐
*│　此技术信息为本公司机密信息，未经本公司书面同意禁止向第三方披露．　│
*│　版权所有：动软卓越（北京）科技有限公司　　　　　　　　　　　　　　│
*└──────────────────────────────────┘
*/
using System;
using System.Data;
using System.Text;
using MySql.Data.MySqlClient;
using XHD.DBUtility;//Please add references
namespace XHD.DAL
{
    /// <summary>
    /// 数据访问类:shop_order_goods
    /// </summary>
    public partial class shop_order_goods
    {
        public shop_order_goods()
        { }
        #region  BasicMethod

        /// <summary>
        /// 是否存在该记录
        /// </summary>
        public bool Exists(int ordergood_id)
        {
            StringBuilder strSql = new StringBuilder();
            strSql.Append("select count(1) from shop_order_goods");
            strSql.Append(" where ordergood_id=@ordergood_id ");
            MySqlParameter[] parameters = {
					new MySqlParameter("@ordergood_id", MySqlDbType.Int32,8)			};
            parameters[0].Value = ordergood_id;

            return Shop_DbHelperMySQL.Exists(strSql.ToString(), parameters);
        }


        /// <summary>
        /// 增加一条数据
        /// </summary>
        public bool Add(XHD.Model.shop_order_goods model)
        {
            StringBuilder strSql = new StringBuilder();
            strSql.Append("insert into shop_order_goods(");
            strSql.Append("ordergood_id,cart_id,order_id,order_sn,goods_id,goods_name,goods_sn,goods_number,market_price,goods_price,shipping_fee_price,brand_id,cat_id,user_id,admin_id,purchase_goods_status,is_submit_purchase,stock_warn,is_invoice,is_add_order,doc_id,wms_setbook_id,wms_position,wms_record)");
            strSql.Append(" values (");
            strSql.Append("@ordergood_id,@cart_id,@order_id,@order_sn,@goods_id,@goods_name,@goods_sn,@goods_number,@market_price,@goods_price,@shipping_fee_price,@brand_id,@cat_id,@user_id,@admin_id,@purchase_goods_status,@is_submit_purchase,@stock_warn,@is_invoice,@is_add_order,@doc_id,@wms_setbook_id,@wms_position,@wms_record)");
            MySqlParameter[] parameters = {
					new MySqlParameter("@ordergood_id", MySqlDbType.Int32,8),
					new MySqlParameter("@cart_id", MySqlDbType.Int32,8),
					new MySqlParameter("@order_id", MySqlDbType.Int32,8),
					new MySqlParameter("@order_sn", MySqlDbType.VarChar,20),
					new MySqlParameter("@goods_id", MySqlDbType.Int32,8),
					new MySqlParameter("@goods_name", MySqlDbType.VarChar,120),
					new MySqlParameter("@goods_sn", MySqlDbType.VarChar,60),
					new MySqlParameter("@goods_number", MySqlDbType.Int32,10),
					new MySqlParameter("@market_price", MySqlDbType.Decimal,10),
					new MySqlParameter("@goods_price", MySqlDbType.Decimal,10),
					new MySqlParameter("@shipping_fee_price", MySqlDbType.Decimal,10),
					new MySqlParameter("@brand_id", MySqlDbType.Int32,5),
					new MySqlParameter("@cat_id", MySqlDbType.Int32,5),
					new MySqlParameter("@user_id", MySqlDbType.Int32,10),
					new MySqlParameter("@admin_id", MySqlDbType.Int32,10),
					new MySqlParameter("@purchase_goods_status", MySqlDbType.Int32,2),
					new MySqlParameter("@is_submit_purchase", MySqlDbType.Int32,2),
					new MySqlParameter("@stock_warn", MySqlDbType.Int32,1),
					new MySqlParameter("@is_invoice", MySqlDbType.Int32,3),
					new MySqlParameter("@is_add_order", MySqlDbType.Int32,2),
					new MySqlParameter("@doc_id", MySqlDbType.Decimal,18),
					new MySqlParameter("@wms_setbook_id", MySqlDbType.Int32,3),
					new MySqlParameter("@wms_position", MySqlDbType.VarChar,50),
					new MySqlParameter("@wms_record", MySqlDbType.Int32,10)};
            parameters[0].Value = model.ordergood_id;
            parameters[1].Value = model.cart_id;
            parameters[2].Value = model.order_id;
            parameters[3].Value = model.order_sn;
            parameters[4].Value = model.goods_id;
            parameters[5].Value = model.goods_name;
            parameters[6].Value = model.goods_sn;
            parameters[7].Value = model.goods_number;
            parameters[8].Value = model.market_price;
            parameters[9].Value = model.goods_price;
            parameters[10].Value = model.shipping_fee_price;
            parameters[11].Value = model.brand_id;
            parameters[12].Value = model.cat_id;
            parameters[13].Value = model.user_id;
            parameters[14].Value = model.admin_id;
            parameters[15].Value = model.purchase_goods_status;
            parameters[16].Value = model.is_submit_purchase;
            parameters[17].Value = model.stock_warn;
            parameters[18].Value = model.is_invoice;
            parameters[19].Value = model.is_add_order;
            parameters[20].Value = model.doc_id;
            parameters[21].Value = model.wms_setbook_id;
            parameters[22].Value = model.wms_position;
            parameters[23].Value = model.wms_record;

            int rows = Shop_DbHelperMySQL.ExecuteSql(strSql.ToString(), parameters);
            if (rows > 0)
            {
                return true;
            }
            else
            {
                return false;
            }
        }
        /// <summary>
        /// 更新一条数据
        /// </summary>
        public bool Update(XHD.Model.shop_order_goods model)
        {
            StringBuilder strSql = new StringBuilder();
            strSql.Append("update shop_order_goods set ");
            strSql.Append("cart_id=@cart_id,");
            strSql.Append("order_id=@order_id,");
            strSql.Append("order_sn=@order_sn,");
            strSql.Append("goods_id=@goods_id,");
            strSql.Append("goods_name=@goods_name,");
            strSql.Append("goods_sn=@goods_sn,");
            strSql.Append("goods_number=@goods_number,");
            strSql.Append("market_price=@market_price,");
            strSql.Append("goods_price=@goods_price,");
            strSql.Append("shipping_fee_price=@shipping_fee_price,");
            strSql.Append("brand_id=@brand_id,");
            strSql.Append("cat_id=@cat_id,");
            strSql.Append("user_id=@user_id,");
            strSql.Append("admin_id=@admin_id,");
            strSql.Append("purchase_goods_status=@purchase_goods_status,");
            strSql.Append("is_submit_purchase=@is_submit_purchase,");
            strSql.Append("stock_warn=@stock_warn,");
            strSql.Append("is_invoice=@is_invoice,");
            strSql.Append("is_add_order=@is_add_order,");
            strSql.Append("doc_id=@doc_id,");
            strSql.Append("wms_setbook_id=@wms_setbook_id,");
            strSql.Append("wms_position=@wms_position,");
            strSql.Append("wms_record=@wms_record");
            strSql.Append(" where ordergood_id=@ordergood_id ");
            MySqlParameter[] parameters = {
					new MySqlParameter("@cart_id", MySqlDbType.Int32,8),
					new MySqlParameter("@order_id", MySqlDbType.Int32,8),
					new MySqlParameter("@order_sn", MySqlDbType.VarChar,20),
					new MySqlParameter("@goods_id", MySqlDbType.Int32,8),
					new MySqlParameter("@goods_name", MySqlDbType.VarChar,120),
					new MySqlParameter("@goods_sn", MySqlDbType.VarChar,60),
					new MySqlParameter("@goods_number", MySqlDbType.Int32,10),
					new MySqlParameter("@market_price", MySqlDbType.Decimal,10),
					new MySqlParameter("@goods_price", MySqlDbType.Decimal,10),
					new MySqlParameter("@shipping_fee_price", MySqlDbType.Decimal,10),
					new MySqlParameter("@brand_id", MySqlDbType.Int32,5),
					new MySqlParameter("@cat_id", MySqlDbType.Int32,5),
					new MySqlParameter("@user_id", MySqlDbType.Int32,10),
					new MySqlParameter("@admin_id", MySqlDbType.Int32,10),
					new MySqlParameter("@purchase_goods_status", MySqlDbType.Int32,2),
					new MySqlParameter("@is_submit_purchase", MySqlDbType.Int32,2),
					new MySqlParameter("@stock_warn", MySqlDbType.Int32,1),
					new MySqlParameter("@is_invoice", MySqlDbType.Int32,3),
					new MySqlParameter("@is_add_order", MySqlDbType.Int32,2),
					new MySqlParameter("@doc_id", MySqlDbType.Decimal,18),
					new MySqlParameter("@wms_setbook_id", MySqlDbType.Int32,3),
					new MySqlParameter("@wms_position", MySqlDbType.VarChar,50),
					new MySqlParameter("@wms_record", MySqlDbType.Int32,10),
					new MySqlParameter("@ordergood_id", MySqlDbType.Int32,8)};
            parameters[0].Value = model.cart_id;
            parameters[1].Value = model.order_id;
            parameters[2].Value = model.order_sn;
            parameters[3].Value = model.goods_id;
            parameters[4].Value = model.goods_name;
            parameters[5].Value = model.goods_sn;
            parameters[6].Value = model.goods_number;
            parameters[7].Value = model.market_price;
            parameters[8].Value = model.goods_price;
            parameters[9].Value = model.shipping_fee_price;
            parameters[10].Value = model.brand_id;
            parameters[11].Value = model.cat_id;
            parameters[12].Value = model.user_id;
            parameters[13].Value = model.admin_id;
            parameters[14].Value = model.purchase_goods_status;
            parameters[15].Value = model.is_submit_purchase;
            parameters[16].Value = model.stock_warn;
            parameters[17].Value = model.is_invoice;
            parameters[18].Value = model.is_add_order;
            parameters[19].Value = model.doc_id;
            parameters[20].Value = model.wms_setbook_id;
            parameters[21].Value = model.wms_position;
            parameters[22].Value = model.wms_record;
            parameters[23].Value = model.ordergood_id;

            int rows = Shop_DbHelperMySQL.ExecuteSql(strSql.ToString(), parameters);
            if (rows > 0)
            {
                return true;
            }
            else
            {
                return false;
            }
        }

        /// <summary>
        /// 删除一条数据
        /// </summary>
        public bool Delete(int ordergood_id)
        {

            StringBuilder strSql = new StringBuilder();
            strSql.Append("delete from shop_order_goods ");
            strSql.Append(" where ordergood_id=@ordergood_id ");
            MySqlParameter[] parameters = {
					new MySqlParameter("@ordergood_id", MySqlDbType.Int32,8)			};
            parameters[0].Value = ordergood_id;

            int rows = Shop_DbHelperMySQL.ExecuteSql(strSql.ToString(), parameters);
            if (rows > 0)
            {
                return true;
            }
            else
            {
                return false;
            }
        }
        /// <summary>
        /// 批量删除数据
        /// </summary>
        public bool DeleteList(string ordergood_idlist)
        {
            StringBuilder strSql = new StringBuilder();
            strSql.Append("delete from shop_order_goods ");
            strSql.Append(" where ordergood_id in (" + ordergood_idlist + ")  ");
            int rows = Shop_DbHelperMySQL.ExecuteSql(strSql.ToString());
            if (rows > 0)
            {
                return true;
            }
            else
            {
                return false;
            }
        }


        /// <summary>
        /// 得到一个对象实体
        /// </summary>
        public XHD.Model.shop_order_goods GetModel(int ordergood_id)
        {

            StringBuilder strSql = new StringBuilder();
            strSql.Append("select ordergood_id,cart_id,order_id,order_sn,goods_id,goods_name,goods_sn,goods_number,invoice_number,market_price,goods_price,shipping_fee_price,brand_id,cat_id,user_id,admin_id,purchase_goods_status,is_submit_purchase,stock_warn,is_invoice,is_add_order,doc_id,wms_setbook_id,wms_position,wms_record,goods_attr from shop_order_goods ");
            strSql.Append(" where ordergood_id=@ordergood_id ");
            MySqlParameter[] parameters = {
					new MySqlParameter("@ordergood_id", MySqlDbType.Int32,8)			};
            parameters[0].Value = ordergood_id;

            XHD.Model.shop_order_goods model = new XHD.Model.shop_order_goods();
            DataSet ds = Shop_DbHelperMySQL.Query(strSql.ToString(), parameters);
            if (ds.Tables[0].Rows.Count > 0)
            {
                return DataRowToModel(ds.Tables[0].Rows[0]);
            }
            else
            {
                return null;
            }
        }


        /// <summary>
        /// 得到一个对象实体
        /// </summary>
        public XHD.Model.shop_order_goods DataRowToModel(DataRow row)
        {
            XHD.Model.shop_order_goods model = new XHD.Model.shop_order_goods();
            if (row != null)
            {
                if (row["ordergood_id"] != null && row["ordergood_id"].ToString() != "")
                {
                    model.ordergood_id = int.Parse(row["ordergood_id"].ToString());
                }
                if (row["cart_id"] != null && row["cart_id"].ToString() != "")
                {
                    model.cart_id = int.Parse(row["cart_id"].ToString());
                }
                if (row["order_id"] != null && row["order_id"].ToString() != "")
                {
                    model.order_id = int.Parse(row["order_id"].ToString());
                }
                if (row["order_sn"] != null)
                {
                    model.order_sn = row["order_sn"].ToString();
                }
                if (row["goods_id"] != null && row["goods_id"].ToString() != "")
                {
                    model.goods_id = int.Parse(row["goods_id"].ToString());
                }
                if (row["goods_name"] != null)
                {
                    model.goods_name = row["goods_name"].ToString();
                }
                if (row["goods_sn"] != null)
                {
                    model.goods_sn = row["goods_sn"].ToString();
                }
                if (row["goods_number"] != null && row["goods_number"].ToString() != "")
                {
                    model.goods_number = int.Parse(row["goods_number"].ToString());
                }
                if (row["invoice_number"] != null && row["invoice_number"].ToString() != "")
                {
                    model.invoice_number = int.Parse(row["invoice_number"].ToString());
                }
                if (row["market_price"] != null && row["market_price"].ToString() != "")
                {
                    model.market_price = decimal.Parse(row["market_price"].ToString());
                }
                if (row["goods_price"] != null && row["goods_price"].ToString() != "")
                {
                    model.goods_price = decimal.Parse(row["goods_price"].ToString());
                }
                if (row["shipping_fee_price"] != null && row["shipping_fee_price"].ToString() != "")
                {
                    model.shipping_fee_price = decimal.Parse(row["shipping_fee_price"].ToString());
                }
                if (row["brand_id"] != null && row["brand_id"].ToString() != "")
                {
                    model.brand_id = int.Parse(row["brand_id"].ToString());
                }
                if (row["cat_id"] != null && row["cat_id"].ToString() != "")
                {
                    model.cat_id = int.Parse(row["cat_id"].ToString());
                }
                if (row["user_id"] != null && row["user_id"].ToString() != "")
                {
                    model.user_id = int.Parse(row["user_id"].ToString());
                }
                if (row["admin_id"] != null && row["admin_id"].ToString() != "")
                {
                    model.admin_id = int.Parse(row["admin_id"].ToString());
                }
                if (row["purchase_goods_status"] != null && row["purchase_goods_status"].ToString() != "")
                {
                    model.purchase_goods_status = int.Parse(row["purchase_goods_status"].ToString());
                }
                if (row["is_submit_purchase"] != null && row["is_submit_purchase"].ToString() != "")
                {
                    model.is_submit_purchase = int.Parse(row["is_submit_purchase"].ToString());
                }
                if (row["stock_warn"] != null && row["stock_warn"].ToString() != "")
                {
                    model.stock_warn = int.Parse(row["stock_warn"].ToString());
                }
                if (row["is_invoice"] != null && row["is_invoice"].ToString() != "")
                {
                    model.is_invoice = int.Parse(row["is_invoice"].ToString());
                }
                if (row["is_add_order"] != null && row["is_add_order"].ToString() != "")
                {
                    model.is_add_order = int.Parse(row["is_add_order"].ToString());
                }
                if (row["doc_id"] != null && row["doc_id"].ToString() != "")
                {
                    model.doc_id = decimal.Parse(row["doc_id"].ToString());
                }
                if (row["wms_setbook_id"] != null && row["wms_setbook_id"].ToString() != "")
                {
                    model.wms_setbook_id = int.Parse(row["wms_setbook_id"].ToString());
                }
                if (row["wms_position"] != null)
                {
                    model.wms_position = row["wms_position"].ToString();
                }
                if (row["wms_record"] != null && row["wms_record"].ToString() != "")
                {
                    model.wms_record = int.Parse(row["wms_record"].ToString());
                }
                if (row["goods_attr"] != null)
                {
                    model.goods_attr = row["goods_attr"].ToString();
                }
            }
            return model;
        }

        /// <summary>
        /// 获得数据列表
        /// </summary>
        public DataSet GetList(string strWhere)
        {
            StringBuilder strSql = new StringBuilder();
            strSql.Append("select ordergood_id,cart_id,order_id,order_sn,goods_id,goods_name,goods_sn,goods_number,invoice_number,market_price,goods_price,shipping_fee_price,brand_id,cat_id,user_id,admin_id,purchase_goods_status,is_submit_purchase,stock_warn,is_invoice,is_add_order,doc_id,wms_setbook_id,wms_position,wms_record,goods_attr ");
            strSql.Append(" FROM shop_order_goods ");
            if (strWhere.Trim() != "")
            {
                strSql.Append(" where " + strWhere);
            }
            return Shop_DbHelperMySQL.Query(strSql.ToString());
        }

        /// <summary>
        /// 获取最近购买商品
        /// </summary>
        public DataSet GetCurGoods(string strWhere, int limit, int user_id)
        {
            StringBuilder strSql = new StringBuilder();
            strSql.Append("select og.ordergood_id,og.cart_id,og.order_id,og.order_sn,og.goods_id,og.goods_name,og.goods_sn,og.goods_number,og.market_price,og.goods_price,og.shipping_fee_price,og.brand_id,og.cat_id,og.user_id,og.admin_id,og.purchase_goods_status,og.is_submit_purchase,og.stock_warn,og.is_invoice,og.is_add_order,og.doc_id,og.wms_setbook_id,og.wms_position,og.wms_record, ");
            strSql.Append(" oi.add_time,g.goods_unit,g.goods_sn,g.goods_weight,g.goods_img ");
            strSql.Append(" FROM shop_order_goods as og left join shop_order_info as oi on og.order_id=oi.order_id ");
            strSql.Append(" left join shop_goods as g on og.goods_id=g.goods_id ");
            strSql.Append(" inner join (select max(ordergood_id) as id from shop_order_goods where user_id=" + user_id + " group by goods_id) as cur on cur.id=og.ordergood_id ");

            if (strWhere.Trim() != "")
            {
                strSql.Append(" where " + strWhere);
            }
            strSql.Append(" limit " + limit);
            return Shop_DbHelperMySQL.Query(strSql.ToString());
        }


        /// <summary>
        /// 获得客服的某一个产品的最近销售价
        /// </summary>
        public DataSet GetEmpSaleGoods(string strWhere, int limit)
        {           
            StringBuilder strSql = new StringBuilder();
            strSql.Append(" select r.goods_id,r.goods_price,i.admin_user_name  from shop_order_goods r ");
            strSql.Append(" inner join  shop_order_info i on r.order_id= i.order_id and i.order_status !=9 and i.erp_time is not null  ");

            if (strWhere.Trim() != "")
            {
                strSql.Append(" where " + strWhere);
            }
            strSql.Append(" limit " + limit);
            return Shop_DbHelperMySQL.Query(strSql.ToString());
        }
         

        /// <summary>
        /// 获取记录总数
        /// </summary>
        public int GetRecordCount(string strWhere)
        {
            StringBuilder strSql = new StringBuilder();
            strSql.Append("select count(1) FROM shop_order_goods ");
            if (strWhere.Trim() != "")
            {
                strSql.Append(" where " + strWhere);
            }
            object obj = Shop_DbHelperMySQL.GetSingle(strSql.ToString());
            if (obj == null)
            {
                return 0;
            }
            else
            {
                return Convert.ToInt32(obj);
            }
        }
        /// <summary>
        /// 分页获取数据列表
        /// </summary>
        public DataSet GetListByPage(string strWhere, string orderby, int startIndex, int endIndex)
        {
            StringBuilder strSql = new StringBuilder();
            strSql.Append("SELECT * FROM ( ");
            strSql.Append(" SELECT ROW_NUMBER() OVER (");
            if (!string.IsNullOrEmpty(orderby.Trim()))
            {
                strSql.Append("order by T." + orderby);
            }
            else
            {
                strSql.Append("order by T.ordergood_id desc");
            }
            strSql.Append(")AS Row, T.*  from shop_order_goods T ");
            if (!string.IsNullOrEmpty(strWhere.Trim()))
            {
                strSql.Append(" WHERE " + strWhere);
            }
            strSql.Append(" ) TT");
            strSql.AppendFormat(" WHERE TT.Row between {0} and {1}", startIndex, endIndex);
            return Shop_DbHelperMySQL.Query(strSql.ToString());
        }


        /*
        /// <summary>
        /// 分页获取数据列表
        /// </summary>
        public DataSet GetList(int PageSize,int PageIndex,string strWhere)
        {
            MySqlParameter[] parameters = {
                    new MySqlParameter("@tblName", MySqlDbType.VarChar, 255),
                    new MySqlParameter("@fldName", MySqlDbType.VarChar, 255),
                    new MySqlParameter("@PageSize", MySqlDbType.Int32),
                    new MySqlParameter("@PageIndex", MySqlDbType.Int32),
                    new MySqlParameter("@IsReCount", MySqlDbType.Bit),
                    new MySqlParameter("@OrderType", MySqlDbType.Bit),
                    new MySqlParameter("@strWhere", MySqlDbType.VarChar,1000),
                    };
            parameters[0].Value = "shop_order_goods";
            parameters[1].Value = "ordergood_id";
            parameters[2].Value = PageSize;
            parameters[3].Value = PageIndex;
            parameters[4].Value = 0;
            parameters[5].Value = 0;
            parameters[6].Value = strWhere;	
            return Shop_DbHelperMySQL.RunProcedure("UP_GetRecordByPage",parameters,"ds");
        }*/

        #endregion  BasicMethod
        #region  ExtensionMethod

        #endregion  ExtensionMethod
    }
}

