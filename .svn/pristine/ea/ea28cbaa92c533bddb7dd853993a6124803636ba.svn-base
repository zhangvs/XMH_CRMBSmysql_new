var date = new Date; var nowYear = date.getFullYear(); var nowMonth = date.getMonth() + 1; var nowDate = date.getDate(); var workDays; var nowDays; var h = window.innerHeight || document.documentElement.clientHeight || document.body.clientHeight; var syear; var mains = new Array(); var datetime; var datetimes = new Array(); var axisData = new Array(); var name; var admin_user_name; var user_count = 0; var cj_count = new Array(); var Cjbs = new Array(); var saleData = new Array(); var backData = new Array(); var saleBackData = new Array(); var saleDataSums = new Array(); var backDataSums = new Array(); var saleBackDataSums = new Array(); var user_id; var u_company; var user_name; var monthCount; var year_count; var salemoneyUser; var backmoneyUser; var realmoneyUser; var user_id2; var u_company2; var user_name2; var monthCount2; var year_count2; var salemoneyUser2; var backmoneyUser2; var realmoneyUser2; var user_ids = new Array(); var u_companys = new Array(); var user_names = new Array(); var userIds = new Array(); var uCompanys = new Array(); var userNames = new Array(); var salemoneyUsers = new Array(); var backmoneyUsers = new Array(); var realmoneyUsers = new Array(); var month_counts = new Array(); var month_frequencys = new Array(); var month_countsSum = new Array(); var month_frequencysSum = new Array(); var yearSaleDataSum = 0; var yearBackDataSum = 0; var yearSaleBackDataSum = 0; var year_counts = new Array(); var year_frequencys = new Array(); var year_countsSum = 0; function clearData() { $("#form1").html(""); mains = []; datetimes = []; axisData = []; saleData = []; backData = []; saleBackData = []; saleBackDataSums = []; saleDataSums = []; backDataSums = []; user_ids = []; u_companys = []; user_names = []; userIds = []; uCompanys = []; userNames = []; salemoneyUsers = []; backmoneyUsers = []; realmoneyUsers = []; month_counts = []; month_frequencys = []; month_countsSum = []; month_frequencysSum = []; yearSaleDataSum = 0; yearBackDataSum = 0; yearSaleBackDataSum = 0; year_counts = []; year_frequencys = []; year_countsSum = 0; Cjbs = []; cj_count = [] } function getMonthSaleBackData(GridData) { clearData(); admin_user_name = GridData.Rows[0].admin_user_name; name = GridData.Rows[0].name; user_count = GridData.Rows[0].user_count; var x = 0; var seriess_id = 0; if (GridData.Rows.length > 0) { if (nowYear > Number(syear)) { nowDays = 360; workDays = 300 } else { datetime = GridData.Rows[0].datetime; nowDays = (nowMonth - parseInt(datetime) + 1) * 30; workDays = (nowMonth - parseInt(datetime) + 1) * 25 } for (var j = 0; j < GridData.Rows.length; j++) { datetime = GridData.Rows[j].datetime; if ($.inArray(datetime, datetimes) < 0) { seriess_id = datetimes.push(datetime) - 1; $("#form1").append("<a id='a_main" + seriess_id + "' href='#main" + seriess_id + "'> </a><div id='main" + seriess_id + "' ></div></div><hr style='height:10px;border:none;border-top:10px groove skyblue;' />"); user_ids[seriess_id] = new Array(); u_companys[seriess_id] = new Array(); user_names[seriess_id] = new Array(); month_counts[seriess_id] = new Array(); month_frequencys[seriess_id] = new Array(); month_countsSum[seriess_id] = 0; month_frequencysSum[seriess_id] = 0; saleBackData[seriess_id] = new Array(); saleData[seriess_id] = new Array(); backData[seriess_id] = new Array(); saleBackDataSums[seriess_id] = parseFloat(GridData.Rows[j].realmoneyMonth.toFixed()); saleDataSums[seriess_id] = parseFloat(GridData.Rows[j].salemoneyMonth.toFixed()); backDataSums[seriess_id] = parseFloat(GridData.Rows[j].backmoneyMonth.toFixed()); yearSaleBackDataSum += saleBackDataSums[seriess_id]; yearSaleDataSum += saleDataSums[seriess_id]; yearBackDataSum += backDataSums[seriess_id]; x = j } user_id = GridData.Rows[j].user_id; u_company = GridData.Rows[j].u_company; user_name = GridData.Rows[j].user_name; monthCount = GridData.Rows[j].monthCount; if (monthCount == null) { monthCount = 0 } year_count = GridData.Rows[j].year_count; if (year_count == null) { year_count = 0 } salemoneyUser = parseFloat(GridData.Rows[j].salemoneyUser.toFixed()); backmoneyUser = parseFloat(GridData.Rows[j].backmoneyUser.toFixed()); realmoneyUser = parseFloat(GridData.Rows[j].realmoneyUser.toFixed()); var ii = $.inArray(user_name, userNames); if (ii < 0) { userIds.push(user_id); uCompanys.push(u_company); userNames.push(user_name); salemoneyUsers.push(salemoneyUser); backmoneyUsers.push(backmoneyUser); realmoneyUsers.push(realmoneyUser); if (year_count == 0) { year_counts.push(0); year_frequencys.push(0) } else { year_counts.push(year_count); year_frequencys.push(parseFloat(nowDays / year_count).toFixed()) } } else { if (realmoneyUsers[ii] != realmoneyUser) { salemoneyUsers[ii] += salemoneyUser; backmoneyUsers[ii] += backmoneyUser; realmoneyUsers[ii] += realmoneyUser; year_counts[ii] += year_count; if (year_counts[ii] == 0) { year_frequencys[ii] = 0 } else { year_frequencys[ii] = parseFloat((nowDays / year_counts[ii]).toFixed()) } } } user_ids[seriess_id][j - x] = user_id; u_companys[seriess_id][j - x] = u_company; user_names[seriess_id][j - x] = user_name; if (monthCount == 0) { month_counts[seriess_id][j - x] = 0; month_frequencys[seriess_id][j - x] = 0 } else { month_counts[seriess_id][j - x] = monthCount; month_frequencys[seriess_id][j - x] = parseFloat((30 / monthCount).toFixed()); month_countsSum[seriess_id] += monthCount; month_frequencysSum[seriess_id] = parseFloat((25 / month_countsSum[seriess_id] * 8).toFixed(1)) } saleBackData[seriess_id][j - x] = parseFloat(GridData.Rows[j].realmoney.toFixed()); saleData[seriess_id][j - x] = parseFloat(GridData.Rows[j].salemoney.toFixed()); backData[seriess_id][j - x] = parseFloat(GridData.Rows[j].backmoney.toFixed()); year_countsSum += monthCount } } for (var i = 0; i < realmoneyUsers.length; i++) { for (var j = i + 1; j < realmoneyUsers.length; j++) { if (realmoneyUsers[i] < realmoneyUsers[j]) { user_id2 = userIds[i]; u_company2 = uCompanys[i]; user_name2 = userNames[i]; monthCount2 = year_counts[i]; frequency2 = year_frequencys[i]; salemoneyUser2 = salemoneyUsers[i]; backmoneyUser2 = backmoneyUsers[i]; realmoneyUser2 = realmoneyUsers[i]; userIds[i] = userIds[j]; uCompanys[i] = uCompanys[j]; userNames[i] = userNames[j]; year_counts[i] = year_counts[j]; year_frequencys[i] = year_frequencys[j]; salemoneyUsers[i] = salemoneyUsers[j]; backmoneyUsers[i] = backmoneyUsers[j]; realmoneyUsers[i] = realmoneyUsers[j]; userIds[j] = user_id2; uCompanys[j] = u_company2; userNames[j] = user_name2; year_counts[j] = monthCount2; year_frequencys[j] = frequency2; salemoneyUsers[j] = salemoneyUser2; backmoneyUsers[j] = backmoneyUser2; realmoneyUsers[j] = realmoneyUser2 } } } for (var i = 0; i < datetimes.length; i++) { cj_count[i] = saleBackData[i].length; if (user_count == 0) { Cjbs[i] = 0 } else { Cjbs[i] = parseFloat((cj_count[i] / user_count * 100).toFixed()) } } if (!Array.prototype.forEach) { Array.prototype.forEach = function forEach(callback, thisArg) { var T, k; if (this == null) { throw new TypeError("this is null or not defined") } var O = Object(this); var len = O.length >>> 0; if (typeof callback !== "function") { throw new TypeError(callback + " is not a function") } if (arguments.length > 1) { T = thisArg } k = 0; while (k < len) { var kValue; if (k in O) { kValue = O[k]; callback.call(T, kValue, k, O) } k++ } } } datetimes.forEach(function DrawEChart(v, e) { $("#main" + e).css("height", 500); var option = { title: { text: admin_user_name + '_' + name + '_' + v + '月份客户销售明细(点击可查看员工销售客户详情)', link: '/DMS/ReportForm/dms_personal_customer.aspx?admin_user_name=' + admin_user_name + '&syear=' + $("#syear").val() + '&smonth=' + v + '&rnd=' + Math.random(), subtext: '\n\n客服' + '\n月销售和：' + saleDataSums[e] + '\n月退货和：' + backDataSums[e] + '\n月实际销售和：' + saleBackDataSums[e] + '\n\n月成交客户数：' + cj_count[e] + '\n分配客户数：' + user_count + '\n月成交率：' + parseFloat((cj_count[e] / user_count * 100).toFixed()) + '%' + '\n\n月成交次数：' + month_countsSum[e] + '\n月成交频率：' + month_frequencysSum[e] + '小时/次' }, visualMap: { top: 20, right: 40, min: 0, max: 20000, pieces: [{ min: 20000 }, { min: 10000, max: 20000 }, { min: 5000, max: 10000 }, { min: 1000, max: 5000, }, { max: 1000 }], color: ['#d94e5d', '#eac736', '#50a3ba'], }, grid: { x: 180, y2: 200 }, tooltip: { trigger: 'axis', showDelay: 0, formatter: function (params, ticket, callback) { var res = '可点击查看客户销售月报<br/>' + params[0].name; for (var i = 0, l = params.length; i < l; i++) { res += '<br/>' + params[i].seriesName + ' : ' + params[i].value } return res } }, legend: { data: ['月拿货次数', '月拿货频率(天/次)', '月销售额', '月退货额', '月实际销售额'], selected: { '月销售额': false, '月退货额': false, '月实际销售额': true, '月拿货次数': false, '月拿货频率(天/次)': false } }, toolbox: { show: true, orient: 'vertical', feature: { mark: { show: true }, dataView: { show: true, readOnly: false, optionToContent: function (opt) { var hh = (u_companys[e].length + 1) * 19 + 80; if (hh < 500) { hh = 500 } $("#main" + e).css("height", hh); var series = opt.series; var table = '<table class="dataView" style="width:100%;text-align:center;border:1px solid"><tbody><tr><td>序号</td><td>客户</td><td>电话</td>'; for (var i = 0, l = series.length; i < l; i++) { table += '<td>' + series[i].name + '</td>' }; table += '</tr>'; for (var m = 0, g = u_companys[e].length; m < g; m++) { var no = m + 1; table += '<tr><td>' + no + '</td><td>' + u_companys[e][m] + '</td><td>' + user_names[e][m] + '</td>'; for (var n = 0, l = series.length; n < l; n++) { var val = series[n].data[m]; table += '<td>' + val + '</td>' } table += '</tr>' }; table += '</tbody></table>'; return table }, }, magicType: { show: true, type: ['line', 'bar'] }, restore: { show: true }, saveAsImage: { show: true } } }, calculable: true, xAxis: [{ type: 'category', axisLabel: { interval: 0, rotate: 45, textStyle: { fontWeight: "bolder", color: "#000000" } }, data: u_companys[e] }], yAxis: [{ type: 'value', scale: true, axisLabel: { formatter: function (v) { return v } }, splitArea: { show: true } }], series: [{ name: '月销售额', stack: '月份', type: 'bar', itemStyle: { normal: { label: { show: true, position: 'top' } } }, data: saleData[e], markLine: { data: [{ type: 'average', name: '平均值' }] } }, { name: '月退货额', stack: '月份', type: 'bar', itemStyle: { normal: { label: { show: true, position: 'top' } } }, data: backData[e], markLine: { data: [{ type: 'average', name: '平均值' }] } }, { name: '月实际销售额', type: 'bar', itemStyle: { normal: { label: { show: true, position: 'top' } } }, data: saleBackData[e], markLine: { data: [{ type: 'average', name: '平均值' }] } }, { name: '月拿货次数', type: 'bar', itemStyle: { normal: { label: { show: true, position: 'top' } } }, data: month_counts[e], markLine: { data: [{ type: 'average', name: '平均值' }] } }, { name: '月拿货频率(天/次)', type: 'bar', itemStyle: { normal: { label: { show: true, position: 'top' } } }, data: month_frequencys[e], markLine: { data: [{ type: 'average', name: '平均值' }] } }] }; var myChart = echarts.init(document.getElementById('main' + e), 'macarons'); myChart.setOption(option); mains.push(myChart); myChart.on('click', function (params) { window.open('/DMS/ReportForm/dms_customer_brand.aspx?admin_user_name=' + admin_user_name + '&user_id=' + user_ids[e][params.dataIndex] + '&syear=' + $("#syear").val() + '&smonth=' + v + '&month_count=' + month_counts[e][params.dataIndex] + '&month_frequency=' + month_frequencys[e][params.dataIndex] + '&rnd=' + Math.random()) }) }) } $(window).resize(function () { mains.forEach(function echartsHight(v, e) { v.resize() }) }); function DrawEChartYearUser() { $("#main0").before("<div id='mainUser' ></div>"); $("#mainUser").css("height", 500); var option = { title: { text: admin_user_name + '_' + name + '_' + $("#syear").val() + '年度客户销售合计汇总', subtext: '\n\n年成交客户数：' + userIds.length + '\n年拿货次数：' + year_countsSum + '\n年销售天数：' + nowDays + '\n年拿货频率数：' + parseFloat((nowDays / year_countsSum * 8).toFixed(1)) + '小时/次' }, grid: { x: 180, y2: 200 }, tooltip: { trigger: 'axis', showDelay: 0, formatter: function (params, ticket, callback) { var res = '可点击查看【客户】年报品牌销售情况<br/>' + params[0].name; for (var i = 0, l = params.length; i < l; i++) { res += '<br/>' + params[i].seriesName + ' : ' + params[i].value } return res } }, legend: { data: ['年拿货次数', '年拿货频率(天/次)', '年销售额', '年退货额', '年实际销售额'], selected: { '年拿货次数': false, '年拿货频率(天/次)': false, '年销售额': false, '年退货额': false, '年实际销售额': true, } }, toolbox: { show: true, orient: 'vertical', feature: { mark: { show: true }, dataView: { show: true, readOnly: false, optionToContent: function (opt) { var hh = (uCompanys.length + 1) * 19 + 80; if (hh < 500) { hh = 500 } $("#mainUser").css("height", hh); var series = opt.series; var table = '<table class="dataView" style="width:100%;text-align:center;border:1px solid"><tbody><tr><td>序号</td><td>客户</td><td>电话</td>'; for (var i = 0, l = series.length; i < l; i++) { table += '<td>' + series[i].name + '</td>' }; table += '</tr>'; for (var m = 0, g = uCompanys.length; m < g; m++) { var no = m + 1; table += '<tr><td>' + no + '</td><td>' + uCompanys[m] + '</td><td>' + userNames[m] + '</td>'; for (var n = 0, l = series.length; n < l; n++) { var val = series[n].data[m]; table += '<td>' + val + '</td>' } table += '</tr>' }; table += '</tbody></table>'; return table }, }, myTool: { show: true, title: '导出excel', icon: 'image://http://echarts.baidu.com/images/favicon.png', onclick: function () { loadDrugs() } }, magicType: { show: true, type: ['line', 'bar'] }, restore: { show: true }, saveAsImage: { show: true } } }, calculable: true, xAxis: [{ type: 'category', axisLabel: { interval: 0, rotate: 45, textStyle: { fontWeight: "bolder", color: "#000000" } }, data: uCompanys }], yAxis: [{ type: 'value', scale: true, axisLabel: { formatter: function (v) { return v } }, splitArea: { show: true } }], series: [{ name: '年拿货次数', type: 'bar', itemStyle: { normal: { label: { show: true, position: 'top' } } }, data: year_counts, markLine: { data: [{ type: 'average', name: '平均值' }] } }, { name: '年拿货频率(天/次)', type: 'bar', itemStyle: { normal: { label: { show: true, position: 'top' } } }, data: year_frequencys, markLine: { data: [{ type: 'average', name: '平均值' }] } }, { name: '年销售额', type: 'bar', itemStyle: { normal: { label: { show: true, position: 'top' } } }, data: salemoneyUsers, markLine: { data: [{ type: 'average', name: '平均值' }] } }, { name: '年退货额', type: 'bar', itemStyle: { normal: { label: { show: true, position: 'bottom' } } }, data: backmoneyUsers, markLine: { data: [{ type: 'average', name: '平均值' }] } }, { name: '年实际销售额', type: 'bar', itemStyle: { normal: { label: { show: true, position: 'top' } } }, data: realmoneyUsers, markLine: { data: [{ type: 'average', name: '平均值' }] } }] }; var myChartUser = echarts.init(document.getElementById('mainUser'), 'chalk'); myChartUser.setOption(option); window.onresize = myChartUser.resize; myChartUser.on('click', function (params) { window.open('/DMS/ReportForm/dms_customer_year_brand.aspx?admin_user_name=' + admin_user_name + '&user_id=' + userIds[params.dataIndex] + '&syear=' + $("#syear").val() + '&year_count=' + year_counts[params.dataIndex] + '&year_frequency=' + year_frequencys[params.dataIndex] + '&rnd=' + Math.random()) }) } function DrawEChartMonths() { $("#main0").before("<div id='main' ></div>"); $("#main").css("height", 500); var option = { title: { text: admin_user_name + '_' + name + '_' + $("#syear").val() + '年度客服各月份客户销售对比', subtext: '\n\n客服' + '\n年销量：' + yearSaleDataSum + '\n年退货：' + yearBackDataSum + '\n年实际：' + yearSaleBackDataSum + '\n\n年成交客户数：' + userIds.length + '\n分配客户数：' + user_count + '\n年成交比：' + parseFloat((userIds.length / user_count * 100).toFixed()) + '%' + '\n\n年成交次数：' + year_countsSum + '\n年工作日天数：' + workDays + '\n年成交频率数：' + parseFloat((workDays / year_countsSum * 8).toFixed(1)) + '小时/次' }, grid: { x: 180, y2: 200 }, tooltip: { trigger: 'axis', showDelay: 0, formatter: function (params, ticket, callback) { var res = '可点击定位月份<br/>' + params[0].name; for (var i = 0, l = params.length; i < l; i++) { res += '<br/>' + params[i].seriesName + ' : ' + params[i].value } return res } }, legend: { data: ['月成交客户数', '月成交比', '月成交次数', '月成交频率(小时/次)', '月销售额', '月退货额', '月实际销售额'], selected: { '月成交客户数': true, '月成交比': false, '月成交次数': true, '月成交频率(小时/次)': false, '月销售额': false, '月退货额': false, '月实际销售额': false, } }, toolbox: { show: true, orient: 'vertical', feature: { mark: { show: true }, dataView: { show: true, readOnly: false, optionToContent: function (opt) { var series = opt.series; var table = '<table class="dataView" style="width:100%;text-align:center;border:1px solid"><tbody><tr>' + '<td>月份</td>'; for (var i = 0, l = series.length; i < l; i++) { table += '<td>' + series[i].name + '</td>' }; table += '</tr>'; for (var m = 0, g = datetimes.length; m < g; m++) { table += '<tr><td>' + datetimes[m] + '月</td>'; for (var n = 0, l = series.length; n < l; n++) { var val = series[n].data[m]; if (n == 1) val += '%'; table += '<td>' + val + '</td>' } table += '</tr>' }; table += '</tbody></table>'; return table }, }, magicType: { show: true, type: ['line', 'bar'] }, restore: { show: true }, saveAsImage: { show: true } } }, calculable: true, xAxis: [{ type: 'category', axisLabel: { formatter: function (value) { return value + '月' } }, data: datetimes }], yAxis: [{ type: 'value', scale: true, axisLabel: { formatter: function (v) { return v } }, splitArea: { show: true } }], series: [{ name: '月成交客户数', type: 'line', itemStyle: { normal: { label: { show: true, position: 'top' } } }, data: cj_count, markPoint: { data: [{ type: 'max', name: '最大值' }, { type: 'min', name: '最小值' }] }, markLine: { data: [{ type: 'average', name: '平均值' }] } }, { name: '月成交比', type: 'line', itemStyle: { normal: { label: { show: true, position: 'top', formatter: function (params, ticket, callback) { return params.data + '%' }, } } }, data: Cjbs, markPoint: { data: [{ type: 'max', name: '最大值' }, { type: 'min', name: '最小值' }] }, markLine: { data: [{ type: 'average', name: '平均值' }] } }, { name: '月成交次数', type: 'line', itemStyle: { normal: { label: { show: true, position: 'top' } } }, data: month_countsSum, markPoint: { data: [{ type: 'max', name: '最大值' }, { type: 'min', name: '最小值' }] }, markLine: { data: [{ type: 'average', name: '平均值' }] } }, { name: '月成交频率(小时/次)', type: 'line', itemStyle: { normal: { label: { show: true, position: 'top' } } }, data: month_frequencysSum, markPoint: { data: [{ type: 'max', name: '最大值' }, { type: 'min', name: '最小值' }] }, markLine: { data: [{ type: 'average', name: '平均值' }] } }, { name: '月销售额', type: 'line', itemStyle: { normal: { label: { show: true, position: 'top' } } }, data: saleDataSums, markPoint: { data: [{ type: 'max', name: '最大值' }, { type: 'min', name: '最小值' }] }, markLine: { data: [{ type: 'average', name: '平均值' }] } }, { name: '月退货额', type: 'line', itemStyle: { normal: { label: { show: true, position: 'bottom' } } }, data: backDataSums, markPoint: { data: [{ type: 'max', name: '最大值' }, { type: 'min', name: '最小值' }] }, markLine: { data: [{ type: 'average', name: '平均值' }] } }, { name: '月实际销售额', type: 'line', itemStyle: { normal: { label: { show: true, position: 'top' } } }, data: saleBackDataSums, markPoint: { data: [{ type: 'max', name: '最大值' }, { type: 'min', name: '最小值' }] }, markLine: { data: [{ type: 'average', name: '平均值' }] } }] }; var myChartYear = echarts.init(document.getElementById('main'), 'purple-passion'); myChartYear.setOption(option); window.onresize = myChartYear.resize; myChartYear.on('click', function (params) { document.getElementById("a_main" + params.dataIndex).click() }) } function loadDrugs() { var syear = $("#syear").val(); window.open("/DMS/Reports_DMS.ashx?Action=getYearCustomer&syear=" + syear + "&admin_user_name=" + admin_user_name + "&rnd=" + Math.random()); closePort() }