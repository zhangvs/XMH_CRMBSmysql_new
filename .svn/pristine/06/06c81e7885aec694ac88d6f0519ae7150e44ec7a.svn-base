using System;
using System.Data;
using System.Text;
using MySql.Data.MySqlClient;
using XHD.DBUtility;//Please add references

namespace FMS_DAL
{
    /// <summary>
    /// 数据访问类:shop_invoices_goods
    /// </summary>
    public partial class shop_invoices_goods
    {
        public shop_invoices_goods()
        { }
        #region  BasicMethod

        /// <summary>
        /// 得到最大ID
        /// </summary>
        public int GetMaxId()
        {
            return Shop_DbHelperMySQL.GetMaxID("id", "shop_invoices_goods");
        }

        /// <summary>
        /// 是否存在该记录
        /// </summary>
        public bool Exists(int id)
        {
            StringBuilder strSql = new StringBuilder();
            strSql.Append("select count(1) from shop_invoices_goods");
            strSql.Append(" where id=@id ");
            MySqlParameter[] parameters = {
					new MySqlParameter("@id", MySqlDbType.Int32,11)			};
            parameters[0].Value = id;

            return Shop_DbHelperMySQL.Exists(strSql.ToString(), parameters);
        }


        /// <summary>
        /// 增加一条数据
        /// </summary>
        public int Add(FMS_Model.shop_invoices_goods model)
        {
            StringBuilder strSql = new StringBuilder();
            strSql.Append("insert into shop_invoices_goods(");
            strSql.Append("id,target_id,instorage_goods_cat_id,type,goods_sn,goods_name,goods_packing,goods_unit,goods_num,goods_sold_price,goods_sold_num,goods_price,total_money,tax_rate,update_time,add_time,rec_id,order_id,t_is_shipping_fee,is_replace,is_hidden)");
            strSql.Append(" values (");
            strSql.Append("@id,@target_id,@instorage_goods_cat_id,@type,@goods_sn,@goods_name,@goods_packing,@goods_unit,@goods_num,@goods_sold_price,@goods_sold_num,@goods_price,@total_money,@tax_rate,@update_time,@add_time,@rec_id,@order_id,@t_is_shipping_fee,@is_replace,@is_hidden)");
            strSql.Append(";select @@IDENTITY");
            MySqlParameter[] parameters = {
					new MySqlParameter("@id", MySqlDbType.Int32,11),
					new MySqlParameter("@target_id", MySqlDbType.Int32,11),
					new MySqlParameter("@instorage_goods_cat_id", MySqlDbType.Int32,11),
					new MySqlParameter("@type", MySqlDbType.Int32,11),
					new MySqlParameter("@goods_sn", MySqlDbType.VarChar,60),
					new MySqlParameter("@goods_name", MySqlDbType.VarChar,128),
					new MySqlParameter("@goods_packing", MySqlDbType.VarChar,128),
					new MySqlParameter("@goods_unit", MySqlDbType.VarChar,128),
					new MySqlParameter("@goods_num", MySqlDbType.Int32,11),
					new MySqlParameter("@goods_sold_price", MySqlDbType.Decimal,12),
					new MySqlParameter("@goods_sold_num", MySqlDbType.Int32,11),
					new MySqlParameter("@goods_price", MySqlDbType.Decimal,16),
					new MySqlParameter("@total_money", MySqlDbType.Decimal,16),
					new MySqlParameter("@tax_rate", MySqlDbType.Int32,3),
					new MySqlParameter("@update_time", MySqlDbType.VarChar,32),
					new MySqlParameter("@add_time", MySqlDbType.VarChar,32),
					new MySqlParameter("@rec_id", MySqlDbType.Int32,11),
					new MySqlParameter("@order_id", MySqlDbType.Int32,11),
					new MySqlParameter("@t_is_shipping_fee", MySqlDbType.Decimal,10),
					new MySqlParameter("@is_replace", MySqlDbType.Int16,2),
					new MySqlParameter("@is_hidden", MySqlDbType.Int16,2)};
            parameters[0].Value = model.id;
            parameters[1].Value = model.target_id;
            parameters[2].Value = model.instorage_goods_cat_id;
            parameters[3].Value = model.type;
            parameters[4].Value = model.goods_sn;
            parameters[5].Value = model.goods_name;
            parameters[6].Value = model.goods_packing;
            parameters[7].Value = model.goods_unit;
            parameters[8].Value = model.goods_num;
            parameters[9].Value = model.goods_sold_price;
            parameters[10].Value = model.goods_sold_num;
            parameters[11].Value = model.goods_price;
            parameters[12].Value = model.total_money;
            parameters[13].Value = model.tax_rate;
            parameters[14].Value = model.update_time;
            parameters[15].Value = model.add_time;
            parameters[16].Value = model.rec_id;
            parameters[17].Value = model.order_id;
            parameters[18].Value = model.t_is_shipping_fee;
            parameters[19].Value = model.is_replace;
            parameters[20].Value = model.is_hidden;

            object obj = Shop_DbHelperMySQL.GetSingle(strSql.ToString(), parameters);
            if (obj == null)
            {
                return 0;
            }
            else
            {
                return Convert.ToInt32(obj);
            }
        }
        /// <summary>
        /// 更新一条数据
        /// </summary>
        public bool Update(FMS_Model.shop_invoices_goods model)
        {
            StringBuilder strSql = new StringBuilder();
            strSql.Append("update shop_invoices_goods set ");
            strSql.Append("target_id=@target_id,");
            strSql.Append("instorage_goods_cat_id=@instorage_goods_cat_id,");
            strSql.Append("type=@type,");
            strSql.Append("goods_sn=@goods_sn,");
            strSql.Append("goods_name=@goods_name,");
            strSql.Append("goods_packing=@goods_packing,");
            strSql.Append("goods_unit=@goods_unit,");
            strSql.Append("goods_num=@goods_num,");
            strSql.Append("goods_sold_price=@goods_sold_price,");
            strSql.Append("goods_sold_num=@goods_sold_num,");
            strSql.Append("goods_price=@goods_price,");
            strSql.Append("total_money=@total_money,");
            strSql.Append("tax_rate=@tax_rate,");
            strSql.Append("update_time=@update_time,");
            strSql.Append("add_time=@add_time,");
            strSql.Append("rec_id=@rec_id,");
            strSql.Append("order_id=@order_id,");
            strSql.Append("t_is_shipping_fee=@t_is_shipping_fee,");
            strSql.Append("is_replace=@is_replace,");
            strSql.Append("is_hidden=@is_hidden");
            strSql.Append(" where id=@id ");
            MySqlParameter[] parameters = {
					new MySqlParameter("@target_id", MySqlDbType.Int32,11),
					new MySqlParameter("@instorage_goods_cat_id", MySqlDbType.Int32,11),
					new MySqlParameter("@type", MySqlDbType.Int32,11),
					new MySqlParameter("@goods_sn", MySqlDbType.VarChar,60),
					new MySqlParameter("@goods_name", MySqlDbType.VarChar,128),
					new MySqlParameter("@goods_packing", MySqlDbType.VarChar,128),
					new MySqlParameter("@goods_unit", MySqlDbType.VarChar,128),
					new MySqlParameter("@goods_num", MySqlDbType.Int32,11),
					new MySqlParameter("@goods_sold_price", MySqlDbType.Decimal,12),
					new MySqlParameter("@goods_sold_num", MySqlDbType.Int32,11),
					new MySqlParameter("@goods_price", MySqlDbType.Decimal,16),
					new MySqlParameter("@total_money", MySqlDbType.Decimal,16),
					new MySqlParameter("@tax_rate", MySqlDbType.Int32,3),
					new MySqlParameter("@update_time", MySqlDbType.VarChar,32),
					new MySqlParameter("@add_time", MySqlDbType.VarChar,32),
					new MySqlParameter("@rec_id", MySqlDbType.Int32,11),
					new MySqlParameter("@order_id", MySqlDbType.Int32,11),
					new MySqlParameter("@t_is_shipping_fee", MySqlDbType.Decimal,10),
					new MySqlParameter("@is_replace", MySqlDbType.Int16,2),
					new MySqlParameter("@is_hidden", MySqlDbType.Int16,2),
					new MySqlParameter("@id", MySqlDbType.Int32,11)};
            parameters[0].Value = model.target_id;
            parameters[1].Value = model.instorage_goods_cat_id;
            parameters[2].Value = model.type;
            parameters[3].Value = model.goods_sn;
            parameters[4].Value = model.goods_name;
            parameters[5].Value = model.goods_packing;
            parameters[6].Value = model.goods_unit;
            parameters[7].Value = model.goods_num;
            parameters[8].Value = model.goods_sold_price;
            parameters[9].Value = model.goods_sold_num;
            parameters[10].Value = model.goods_price;
            parameters[11].Value = model.total_money;
            parameters[12].Value = model.tax_rate;
            parameters[13].Value = model.update_time;
            parameters[14].Value = model.add_time;
            parameters[15].Value = model.rec_id;
            parameters[16].Value = model.order_id;
            parameters[17].Value = model.t_is_shipping_fee;
            parameters[18].Value = model.is_replace;
            parameters[19].Value = model.is_hidden;
            parameters[20].Value = model.id;

            int rows = Shop_DbHelperMySQL.ExecuteSql(strSql.ToString(), parameters);
            if (rows > 0)
            {
                return true;
            }
            else
            {
                return false;
            }
        }


        /// <summary>
        /// 更新一条数据
        /// </summary>
        public bool Updates(FMS_Model.shop_invoices_goods model)
        {
            StringBuilder strSql = new StringBuilder();
            strSql.Append("update shop_invoices_goods set ");
            strSql.Append("goods_num=@goods_num,");          
            strSql.Append("goods_price=@goods_price,");
            strSql.Append("total_money=@total_money,");
            strSql.Append("tax_rate=@tax_rate,"); 
            strSql.Append("update_time=@update_time");         
            strSql.Append(" where id=@id ");
            MySqlParameter[] parameters = {				
					new MySqlParameter("@goods_num", MySqlDbType.Int32,11),
					new MySqlParameter("@goods_price", MySqlDbType.Decimal,16),
					new MySqlParameter("@total_money", MySqlDbType.Decimal,16),
                    new MySqlParameter("@tax_rate", MySqlDbType.Int32,3),
					new MySqlParameter("@update_time", MySqlDbType.VarChar,32),
					new MySqlParameter("@id", MySqlDbType.Int32,11)};
           
            parameters[0].Value = model.goods_num;        
            parameters[1].Value = model.goods_price;
            parameters[2].Value = model.total_money;
            parameters[3].Value = model.update_time;
            parameters[4].Value = model.tax_rate;
            parameters[5].Value = model.id;

            int rows = Shop_DbHelperMySQL.ExecuteSql(strSql.ToString(), parameters);
            if (rows > 0)
            {
                return true;
            }
            else
            {
                return false;
            }
        }


        /// <summary>
        /// 抵扣退货更新
        /// </summary>
        public bool updateBill(FMS_Model.shop_invoices_goods model)
        {
            StringBuilder strSql = new StringBuilder();
            strSql.Append("update shop_invoices_goods set ");
            strSql.Append("goods_num=@goods_num,");
            strSql.Append("goods_price=@goods_price,");
            strSql.Append("total_money=@total_money,");
            strSql.Append("is_replace=@is_replace");
            strSql.Append(" where id=@id ");
            MySqlParameter[] parameters = {				
					new MySqlParameter("@goods_num", MySqlDbType.Int32,11),
					new MySqlParameter("@goods_price", MySqlDbType.Decimal,16),
					new MySqlParameter("@total_money", MySqlDbType.Decimal,16),
					new MySqlParameter("@is_replace", MySqlDbType.Int16,2),
					new MySqlParameter("@id", MySqlDbType.Int32,11)};

            parameters[0].Value = model.goods_num;
            parameters[1].Value = model.goods_price;
            parameters[2].Value = model.total_money;
            parameters[3].Value = model.is_replace;
            parameters[4].Value = model.id;

            int rows = Shop_DbHelperMySQL.ExecuteSql(strSql.ToString(), parameters);
            if (rows > 0)
            {
                return true;
            }
            else
            {
                return false;
            }
        }


        /// <summary>
        /// 删除一条数据
        /// </summary>
        public bool Delete(int id)
        {

            StringBuilder strSql = new StringBuilder();
            strSql.Append("delete from shop_invoices_goods ");
            strSql.Append(" where id=@id ");
            MySqlParameter[] parameters = {
					new MySqlParameter("@id", MySqlDbType.Int32,11)			};
            parameters[0].Value = id;

            int rows = Shop_DbHelperMySQL.ExecuteSql(strSql.ToString(), parameters);
            if (rows > 0)
            {
                return true;
            }
            else
            {
                return false;
            }
        }
        /// <summary>
        /// 批量删除数据
        /// </summary>
        public bool DeleteList(string idlist)
        {
            StringBuilder strSql = new StringBuilder();
            strSql.Append("delete from shop_invoices_goods ");
            strSql.Append(" where id in (" + idlist + ")  ");
            int rows = Shop_DbHelperMySQL.ExecuteSql(strSql.ToString());
            if (rows > 0)
            {
                return true;
            }
            else
            {
                return false;
            }
        }

        //删除开票下产品信息
        public bool DeleteGood(string strWhere)
        {
            StringBuilder strSql = new StringBuilder();
            strSql.Append("delete from shop_invoices_goods  ");
            strSql.Append(" where " + strWhere + "");
            int rows = Shop_DbHelperMySQL.ExecuteSql(strSql.ToString());
            if (rows > 0)
            {
                return true;
            }
            else
            {
                return false;
            }
        }

        /// <summary>
        /// 得到一个对象实体
        /// </summary>
        public FMS_Model.shop_invoices_goods GetModel(int id)
        {

            StringBuilder strSql = new StringBuilder();
            strSql.Append("select id,target_id,instorage_goods_cat_id,type,goods_sn,goods_name,goods_packing,goods_unit,goods_num,goods_sold_price,goods_sold_num,goods_price,total_money,tax_rate,update_time,add_time,rec_id,order_id,t_is_shipping_fee,is_replace,is_hidden from shop_invoices_goods ");
            strSql.Append(" where id=@id ");
            MySqlParameter[] parameters = {
					new MySqlParameter("@id", MySqlDbType.Int32,11)			};
            parameters[0].Value = id;

            FMS_Model.shop_invoices_goods model = new FMS_Model.shop_invoices_goods();
            DataSet ds = Shop_DbHelperMySQL.Query(strSql.ToString(), parameters);
            if (ds.Tables[0].Rows.Count > 0)
            {
                return DataRowToModel(ds.Tables[0].Rows[0]);
            }
            else
            {
                return null;
            }
        }


        /// <summary>
        /// 得到一个对象实体
        /// </summary>
        public FMS_Model.shop_invoices_goods DataRowToModel(DataRow row)
        {
            FMS_Model.shop_invoices_goods model = new FMS_Model.shop_invoices_goods();
            if (row != null)
            {
                if (row["id"] != null && row["id"].ToString() != "")
                {
                    model.id = int.Parse(row["id"].ToString());
                }
                if (row["target_id"] != null && row["target_id"].ToString() != "")
                {
                    model.target_id = int.Parse(row["target_id"].ToString());
                }
                if (row["instorage_goods_cat_id"] != null && row["instorage_goods_cat_id"].ToString() != "")
                {
                    model.instorage_goods_cat_id = int.Parse(row["instorage_goods_cat_id"].ToString());
                }
                if (row["type"] != null && row["type"].ToString() != "")
                {
                    model.type = int.Parse(row["type"].ToString());
                }
                if (row["goods_sn"] != null)
                {
                    model.goods_sn = row["goods_sn"].ToString();
                }
                if (row["goods_name"] != null)
                {
                    model.goods_name = row["goods_name"].ToString();
                }
                if (row["goods_packing"] != null)
                {
                    model.goods_packing = row["goods_packing"].ToString();
                }
                if (row["goods_unit"] != null)
                {
                    model.goods_unit = row["goods_unit"].ToString();
                }
                if (row["goods_num"] != null && row["goods_num"].ToString() != "")
                {
                    model.goods_num = int.Parse(row["goods_num"].ToString());
                }
                if (row["goods_sold_price"] != null && row["goods_sold_price"].ToString() != "")
                {
                    model.goods_sold_price = decimal.Parse(row["goods_sold_price"].ToString());
                }
                if (row["goods_sold_num"] != null && row["goods_sold_num"].ToString() != "")
                {
                    model.goods_sold_num = int.Parse(row["goods_sold_num"].ToString());
                }
                if (row["goods_price"] != null && row["goods_price"].ToString() != "")
                {
                    model.goods_price = decimal.Parse(row["goods_price"].ToString());
                }
                if (row["total_money"] != null && row["total_money"].ToString() != "")
                {
                    model.total_money = decimal.Parse(row["total_money"].ToString());
                }
                if (row["tax_rate"] != null && row["tax_rate"].ToString() != "")
                {
                    model.tax_rate = int.Parse(row["tax_rate"].ToString());
                }
                if (row["update_time"] != null)
                {
                    model.update_time = row["update_time"].ToString();
                }
                if (row["add_time"] != null)
                {
                    model.add_time = row["add_time"].ToString();
                }
                if (row["rec_id"] != null && row["rec_id"].ToString() != "")
                {
                    model.rec_id = int.Parse(row["rec_id"].ToString());
                }
                if (row["order_id"] != null && row["order_id"].ToString() != "")
                {
                    model.order_id = int.Parse(row["order_id"].ToString());
                }
                if (row["t_is_shipping_fee"] != null && row["t_is_shipping_fee"].ToString() != "")
                {
                    model.t_is_shipping_fee = decimal.Parse(row["t_is_shipping_fee"].ToString());
                }
                if (row["is_replace"] != null && row["is_replace"].ToString() != "")
                {
                    model.is_replace = int.Parse(row["is_replace"].ToString());
                }
                if (row["is_hidden"] != null && row["is_hidden"].ToString() != "")
                {
                    model.is_hidden = int.Parse(row["is_hidden"].ToString());
                }
            }
            return model;
        }

        /// <summary>
        /// 获得数据列表
        /// </summary>
        public DataSet GetList(string strWhere)
        {
            StringBuilder strSql = new StringBuilder();
            strSql.Append("select id,target_id,instorage_goods_cat_id,type,goods_sn,goods_name,goods_packing,goods_unit,goods_num,goods_sold_price,goods_sold_num,goods_price,total_money,tax_rate,update_time,add_time,rec_id,order_id,t_is_shipping_fee,is_replace,is_hidden ");
            strSql.Append(" FROM shop_invoices_goods ");
            if (strWhere.Trim() != "")
            {
                strSql.Append(" where " + strWhere);
            }
            return Shop_DbHelperMySQL.Query(strSql.ToString());
        }

        /// <summary>
        /// 获得数据列表
        /// </summary>
        public DataSet GetInfo(string strWhere)
        {
            StringBuilder strSql = new StringBuilder();
            strSql.Append(" select i.*,n.refund_money,b.brand_id,b.brand_name,g.goods_id,g.tax_cat_code FROM shop_invoices_goods  i  "); //p.pay_name,
            strSql.Append(" inner join shop_invoices n on i.target_id=n.invoice_id");
            //strSql.Append(" inner join shop_order_info o on o.order_id =i.order_id");
            //strSql.Append(" inner join shop_payment p on p.pay_id=o.pay_id ");
            strSql.Append(" left join shop_goods g on g.goods_sn =i.goods_sn ");
            strSql.Append(" left join shop_brand b on b.brand_id = g.brand_id ");
            if (strWhere.Trim() != "")
            {
                strSql.Append(" where " + strWhere);
            }
            return Shop_DbHelperMySQL.Query(strSql.ToString());
        }

        /// <summary>
        /// 获得开票总金额
        /// </summary>
        public DataSet GetTotlaMoney(string strWhere)
        {
            StringBuilder strSql = new StringBuilder();
            strSql.Append(" select sum(total_money) as total_money,sum(goods_num) as goods_num,sum(goods_sold_price*goods_sold_num) as saleTotal  FROM shop_invoices_goods ");
            if (strWhere.Trim() != "")
            {
                strSql.Append(" where " + strWhere);
            }
            return Shop_DbHelperMySQL.Query(strSql.ToString());
        }

        

        #endregion  BasicMethod

        #region  ExtensionMethod

        #endregion  ExtensionMethod
    }
}

